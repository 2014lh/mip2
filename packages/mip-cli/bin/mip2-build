#!/usr/bin/env node

const cli = require('../lib/cli')
const build = require('../lib/build')
const validator = require('mip-component-validator')
const path = require('path')
const fs = require('fs')

cli.setup({
  noArgs: true,
  options: [
    ['-a, --asset <value>', '静态资源 publicPath'],
    ['-d, --dir <value>', '项目文件夹路径'],
    ['-o, --output <value>', '编译代码输出路径'],
    ['-c, --clean', '构建前先清空输出目录'],
    ['-i, --ignore', '忽略沙盒注入']
  ],
  help: [
    '',
    '  Examples:',
    cli.chalk.gray('    # 编译'),
    '    $ mip build'
  ].join('\n')
})

let configPath = path.resolve(process.cwd(), cli.program.config || 'mip.config.js')
let defaultConfig = {}

if (fs.existsSync(configPath)) {
  defaultConfig = require(configPath)
}

const conf = Object.assign(defaultConfig.build || {}, cli.program)
validator.whitelist(conf.dir).then(reporter => {
  if (reporter.errors.length) {
    throw new Error(reporter.errors[0].message)
  }
})
.then(() => build(conf))
